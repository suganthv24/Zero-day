<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Lost & Found </title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Georgia', serif;
        background-color: #f8f8f8;
        line-height: 1.6;
      }

      .header {
        background: white;
        border-bottom: 2px solid #333;
        padding: 15px 0;
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 1000;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }

      .nav-container {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px;
      }

      .logo {
        font-size: 2.5rem;
        font-weight: bold;
        color: #333;
        font-style: italic;
        text-decoration: none;
      }

      .logo-subtitle {
        font-size: 0.8rem;
        color: #666;
        text-transform: uppercase;
        letter-spacing: 2px;
        margin-top: -5px;
      }

      .nav-menu {
        display: flex;
        gap: 30px;
        align-items: center;
      }

      .nav-menu a {
        color: #333;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s;
        padding: 8px 15px;
        border-radius: 5px;
      }

      .nav-menu a:hover {
        color: #8B4513;
        background-color: #f0f0f0;
      }

      .nav-menu a.active {
        color: #8B4513;
        background-color: #f0f0f0;
      }

      .login-btn {
        background: #8B4513;
        color: white !important;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        transition: all 0.3s;
      }

      .login-btn:hover {
        background: #5d2d0c !important;
        transform: translateY(-2px);
      }

      .main-content {
        margin-top: 20px;
        min-height: calc(100vh - 160px);
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
        padding: 20px;
      }

      .page-header {
        text-align: center;
        margin-bottom: 40px;
      }

      .page-title {
        font-size: 3rem;
        color: #333;
        font-style: italic;
        margin-bottom: 10px;
      }

      .page-subtitle {
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 30px;
      }

      .add-item-btn {
        background: #8B4513;
        color: white;
        padding: 12px 25px;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s;
        margin-bottom: 30px;
      }

      .add-item-btn:hover {
        background: #5d2d0c;
        transform: translateY(-2px);
      }

      .cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 25px;
        margin-bottom: 50px;
      }

      .card {
        background: white;
        border-radius: 12px;
        padding: 25px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        border: 2px solid #e0e0e0;
        transition: all 0.3s;
        position: relative;
      }

      .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        border-color: #8B4513;
      }

      .card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
      }

      .item-type {
        background: #8B4513;
        color: white;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: bold;
        text-transform: uppercase;
      }

      .item-type.found {
        background: #28a745;
      }

      .card-actions {
        display: flex;
        gap: 8px;
      }

      .action-btn {
        background: none;
        border: 2px solid #ddd;
        padding: 6px 10px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s;
      }

      .edit-btn {
        color: #007bff;
        border-color: #007bff;
      }

      .edit-btn:hover {
        background: #007bff;
        color: white;
      }

      .delete-btn {
        color: #dc3545;
        border-color: #dc3545;
      }

      .delete-btn:hover {
        background: #dc3545;
        color: white;
      }

      .item-title {
        font-size: 1.4rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
      }

      .item-description {
        color: #666;
        margin-bottom: 15px;
        line-height: 1.5;
      }

      .item-details {
        border-top: 1px solid #eee;
        padding-top: 15px;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
      }

      .detail-item {
        display: flex;
        flex-direction: column;
      }

      .detail-label {
        font-size: 0.85rem;
        color: #888;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 3px;
      }

      .detail-value {
        font-weight: bold;
        color: #333;
      }

      .phone-number {
        color: #8B4513;
        text-decoration: none;
      }

      .phone-number:hover {
        text-decoration: underline;
      }

      .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
      }

      .modal-content {
        background: white;
        padding: 40px;
        border-radius: 12px;
        width: 500px;
        max-width: 90%;
        position: relative;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4);
        border: 3px solid #8B4513;
        max-height: 90vh;
        overflow-y: auto;
      }

      .close {
        position: absolute;
        top: 15px;
        right: 20px;
        font-size: 28px;
        font-weight: bold;
        color: #888;
        cursor: pointer;
      }

      .modal-content h2 {
        margin-bottom: 20px;
        color: #333;
        font-style: italic;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        color: #333;
      }

      .form-group input,
      .form-group textarea,
      .form-group select {
        width: 100%;
        padding: 12px;
        border: 2px solid #ddd;
        border-radius: 6px;
        font-size: 1rem;
        font-family: inherit;
      }

      .form-group textarea {
        height: 80px;
        resize: vertical;
      }

      .form-buttons {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        margin-top: 30px;
      }

      .btn {
        padding: 12px 25px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: all 0.3s;
      }

      .btn-primary {
        background: #8B4513;
        color: white;
      }

      .btn-primary:hover {
        background: #5d2d0c;
      }

      .btn-secondary {
        background: #6c757d;
        color: white;
      }

      .btn-secondary:hover {
        background: #545b62;
      }

      .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
      }

      .empty-state h3 {
        font-size: 1.5rem;
        margin-bottom: 10px;
      }

      .footer {
        background: #333;
        color: white;
        padding: 40px 0;
        text-align: center;
        margin-top: 50px;
      }

      .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
      }

      .footer-links {
        display: flex;
        justify-content: center;
        gap: 30px;
        margin-bottom: 20px;
      }

      .footer-links a {
        color: white;
        text-decoration: none;
        transition: color 0.3s;
      }

      .footer-links a:hover {
        color: #8B4513;
      }

      .mobile-menu-toggle {
        display: none;
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #333;
      }

      .success-message {
        background: #d4edda;
        color: #155724;
        padding: 15px;
        border: 1px solid #c3e6cb;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
      }

      .error-message {
        background: #f8d7da;
        color: #721c24;
        padding: 15px;
        border: 1px solid #f5c6cb;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
      }

      @media (max-width: 768px) {
        .nav-menu {
          display: none;
          position: absolute;
          top: 100%;
          left: 0;
          right: 0;
          background: white;
          flex-direction: column;
          padding: 20px;
          border-top: 2px solid #333;
          box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .nav-menu.active {
          display: flex;
        }

        .mobile-menu-toggle {
          display: block;
        }

        .page-title {
          font-size: 2rem;
        }

        .cards-container {
          grid-template-columns: 1fr;
        }

        .item-details {
          grid-template-columns: 1fr;
        }

        .logo {
          font-size: 2rem;
        }
      }
    </style>
</head>
<body>
  <!-- Main Content -->
  <main class="main-content">
    <div class="page-header">
      <h1 class="page-title">Lost & Found</h1>
      <p class="page-subtitle">Help reunite people with their belongings</p>
      <button class="add-item-btn" onclick="openAddModal()">+ Add Lost/Found Item</button>
    </div>

    <!-- Display success/error messages -->
    <div id="messageContainer"></div>

    <div class="cards-container" id="cardsContainer">
      <!-- Cards will be generated by JavaScript -->
    </div>

    <div class="empty-state" id="emptyState" style="display: none;">
      <h3>No items reported yet</h3>
      <p>Be the first to report a lost or found item!</p>
    </div>
  </main>

  <!-- Footer -->
  <footer class="footer">
    <div class="footer-content">
      <div class="footer-links">
        <a href="#privacy">Privacy Policy</a>
        <a href="#terms">Terms of Service</a>
        <a href="#contact">Contact Us</a>
        <a href="/admin">Admin</a>
      </div>
      <p>&copy; 2025  All rights reserved.</p>
    </div>
  </footer>

  <!-- Add/Edit Item Modal -->
  <div id="itemModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeItemModal()">&times;</span>
      <h2 id="modalTitle">Add Lost/Found Item</h2>
      
      <form id="itemForm" onsubmit="handleFormSubmit(event)">
        <div class="form-group">
          <label for="type">Type:</label>
          <select id="type" name="type" required>
            <option value="">Select type</option>
            <option value="Lost">Lost</option>
            <option value="Found">Found</option>
          </select>
        </div>
        
        <div class="form-group">
          <label for="itemName">Item Name:</label>
          <input type="text" id="itemName" name="itemName" required placeholder="e.g., iPhone 14, Black Wallet, Keys">
        </div>
        
        <div class="form-group">
          <label for="description">Description:</label>
          <textarea id="description" name="description" placeholder="Provide detailed description including color, brand, distinctive features..."></textarea>
        </div>
        
        <div class="form-group">
          <label for="location">Location:</label>
          <input type="text" id="location" name="location" required placeholder="Where was it lost/found?">
        </div>
        
        <div class="form-group">
          <label for="contactName">Contact Name:</label>
          <input type="text" id="contactName" name="contactName" required placeholder="Your full name">
        </div>
        
        <div class="form-group">
          <label for="phoneNumber">Phone Number:</label>
          <input type="tel" id="phoneNumber" name="phoneNumber" required placeholder="+1 (555) 123-4567">
        </div>
        
        <div class="form-group">
          <label for="date">Date:</label>
          <input type="date" id="date" name="date" required>
        </div>
        
        <div class="form-buttons">
          <button type="button" class="btn btn-secondary" onclick="closeItemModal()">Cancel</button>
          <button type="submit" class="btn btn-primary" id="submitBtn">Create Item</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Login Modal -->
  <div id="loginModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeLoginModal()">&times;</span>
      <h2>Login to RestroBytes</h2>
      <form>
        <div class="form-group">
          <label for="email">Email:</label>
          <input type="email" id="email" name="email" required />
        </div>
        <div class="form-group">
          <label for="password">Password:</label>
          <input type="password" id="password" name="password" required />
        </div>
        <div class="form-buttons">
          <button type="button" class="btn btn-secondary">Admin</button>
          <button type="submit" class="btn btn-primary">Login</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Sample data for lost and found items (for display purposes)
    let lostFoundItems = [
      {
        id: 1,
        type: 'Lost',
        name: 'iPhone 14 Pro',
        description: 'Black iPhone 14 Pro with a clear case. Has a small crack on the bottom left corner.',
        location: 'Main dining area, Table 12',
        contactName: 'Sarah Johnson',
        phoneNumber: '+1 (555) 123-4567',
        dateReported: '2025-01-20'
      },
      {
        id: 2,
        type: 'Found',
        name: 'Brown Leather Wallet',
        description: 'Brown leather bifold wallet containing credit cards and ID. No cash inside.',
        location: 'Restroom near the entrance',
        contactName: 'Mike Chen',
        phoneNumber: '+1 (555) 987-6543',
        dateReported: '2025-01-22'
      },
      {
        id: 3,
        type: 'Lost',
        name: 'Car Keys',
        description: 'Toyota car keys with a blue keychain that says "Best Dad Ever"',
        location: 'Parking lot',
        contactName: 'David Rodriguez',
        phoneNumber: '+1 (555) 456-7890',
        dateReported: '2025-01-24'
      },
      {
        id: 4,
        type: 'Found',
        name: 'Silver Watch',
        description: 'Elegant silver watch with Roman numerals. Appears to be expensive.',
        location: 'Bar area',
        contactName: 'Emma Wilson',
        phoneNumber: '+1 (555) 234-5678',
        dateReported: '2025-01-25'
      }
    ];

    let editingId = null;
    let nextId = 5; // Counter for new items

    // Handle form submission
    function handleFormSubmit(event) {
      event.preventDefault(); // Prevent default form submission
      
      const formData = new FormData(event.target);
      const itemData = {
        type: formData.get('type'),
        name: formData.get('itemName'),
        description: formData.get('description') || 'No description provided',
        location: formData.get('location'),
        contactName: formData.get('contactName'),
        phoneNumber: formData.get('phoneNumber'),
        dateReported: formData.get('date')
      };
      
      if (editingId) {
        // Update existing item
        const itemIndex = lostFoundItems.findIndex(item => item.id === editingId);
        if (itemIndex !== -1) {
          lostFoundItems[itemIndex] = { ...itemData, id: editingId };
          showMessage('Item updated successfully!', 'success');
        }
      } else {
        // Add new item
        const newItem = { ...itemData, id: nextId++ };
        lostFoundItems.push(newItem);
        showMessage('Item added successfully!', 'success');
      }
      
      renderCards();
      closeItemModal();
    }

    // Show success/error messages
    function showMessage(message, type) {
      const messageContainer = document.getElementById('messageContainer');
      const messageClass = type === 'success' ? 'success-message' : 'error-message';
      messageContainer.innerHTML = `<div class="${messageClass}">${message}</div>`;
      
      // Auto-hide message after 5 seconds
      setTimeout(() => {
        messageContainer.innerHTML = '';
      }, 5000);
    }

    function renderCards() {
      const container = document.getElementById('cardsContainer');
      const emptyState = document.getElementById('emptyState');
      
      if (lostFoundItems.length === 0) {
        container.style.display = 'none';
        emptyState.style.display = 'block';
        return;
      }
      
      container.style.display = 'grid';
      emptyState.style.display = 'none';
      
      container.innerHTML = lostFoundItems.map(item => `
        <div class="card">
          <div class="card-header">
            <span class="item-type ${item.type.toLowerCase()}">${item.type}</span>
            <div class="card-actions">
              <button class="action-btn edit-btn" onclick="editItem(${item.id})">Edit</button>
              <button class="action-btn delete-btn" onclick="deleteItem(${item.id})">Delete</button>
            </div>
          </div>
          
          <h3 class="item-title">${item.name}</h3>
          <p class="item-description">${item.description}</p>
          
          <div class="item-details">
            <div class="detail-item">
              <span class="detail-label">Location</span>
              <span class="detail-value">${item.location}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Date</span>
              <span class="detail-value">${formatDate(item.dateReported)}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Contact</span>
              <span class="detail-value">${item.contactName}</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">Phone</span>
              <a href="tel:${item.phoneNumber}" class="detail-value phone-number">${item.phoneNumber}</a>
            </div>
          </div>
        </div>
      `).join('');
    }

    function formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', { 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric' 
      });
    }

    function openAddModal() {
      document.getElementById('modalTitle').textContent = 'Add Lost/Found Item';
      document.getElementById('submitBtn').textContent = 'Create Item';
      document.getElementById('itemForm').reset();
      document.getElementById('date').value = new Date().toISOString().split('T')[0];
      editingId = null;
      document.getElementById('itemModal').style.display = 'flex';
    }

    function editItem(id) {
      const item = lostFoundItems.find(item => item.id === id);
      if (!item) return;
      
      document.getElementById('modalTitle').textContent = 'Edit Item';
      document.getElementById('submitBtn').textContent = 'Update Item';
      document.getElementById('type').value = item.type;
      document.getElementById('itemName').value = item.name;
      document.getElementById('description').value = item.description;
      document.getElementById('location').value = item.location;
      document.getElementById('contactName').value = item.contactName;
      document.getElementById('phoneNumber').value = item.phoneNumber;
      document.getElementById('date').value = item.dateReported;
      
      editingId = id;
      document.getElementById('itemModal').style.display = 'flex';
    }

    function deleteItem(id) {
      if (confirm('Are you sure you want to delete this item?')) {
        lostFoundItems = lostFoundItems.filter(item => item.id !== id);
        showMessage('Item deleted successfully!', 'success');
        renderCards();
      }
    }

    function closeItemModal() {
      document.getElementById('itemModal').style.display = 'none';
      editingId = null;
    }

    function openLoginModal() {
      document.getElementById('loginModal').style.display = 'flex';
    }

    function closeLoginModal() {
      document.getElementById('loginModal').style.display = 'none';
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
      const itemModal = document.getElementById('itemModal');
      const loginModal = document.getElementById('loginModal');
      
      if (event.target === itemModal) {
        closeItemModal();
      }
      if (event.target === loginModal) {
        closeLoginModal();
      }
    }

    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
      renderCards();
    });
  </script>
</body>
</html>